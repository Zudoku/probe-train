apply plugin: "kotlin"

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../core/assets"]

project.ext.mainClassName = "fi.zudoku.probe.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../core/assets")


dependencies {
    api project(':core')
    api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
}



task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}


dist.dependsOn classes
